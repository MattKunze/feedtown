name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  rust-checks:
    name: Rust Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check Rust formatting
      run: cargo fmt --all -- --check
      
    - name: Run Rust linting
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run Rust tests
      run: cargo test --verbose

  deno-checks:
    name: Deno Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
        
    - name: Cache Deno dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/deno
          ~/.deno
          web/node_modules
        key: ${{ runner.os }}-deno-${{ hashFiles('web/deno.lock', 'web/deno.jsonc') }}
        restore-keys: |
          ${{ runner.os }}-deno-
          
    - name: Check Deno formatting
      working-directory: ./web
      run: deno fmt --check src/
      
    - name: Run Deno linting
      working-directory: ./web
      run: deno lint src/
      
    - name: Run Deno type checking
      working-directory: ./web
      run: deno check src/main.tsx
      
    - name: Run Deno tests
      working-directory: ./web
      run: deno test src/ --allow-all

  # Optional: Combined status check
  all-checks:
    name: All Checks Complete
    runs-on: ubuntu-latest
    needs: [rust-checks, deno-checks]
    if: always()
    
    steps:
    - name: Check all jobs succeeded
      run: |
        if [[ "${{ needs.rust-checks.result }}" != "success" || "${{ needs.deno-checks.result }}" != "success" ]]; then
          echo "One or more checks failed"
          exit 1
        fi
        echo "All checks passed!"